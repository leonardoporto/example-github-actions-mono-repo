on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

name: CI/CD

jobs:
  filter:
    name: filter
    runs-on: ubuntu-latest
    outputs:
      division: "${{ steps.filter.outputs.division }}"
      # division: "${{ steps.filter.outputs.division }}"
      # division: "${{ steps.filter.outputs.division }}"
      # division: "${{ steps.filter.outputs.division }}"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Filter only modified Functions
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: ".github/filter.yml"

  lint-division:
    if: needs.filter.outputs.division == 'true'
    name: division - code analysis
    needs: [filter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Go to
        run: cd functions/division
      - name: Install dependencies
        run: npm install
      - name: Lint
        run: npm run lint

  test-division:
    if: needs.filter.outputs.division == 'true'
    name: division - tests
    needs: [filter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Go to
        run: cd functions/division
      - name: Install dependencies
        run: npm install
      - name: Lint
        run: npm run lint

  deploy-division:
    name: division - tests
    needs: [lint-division, test-division]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: "sa-east-1"

      - name: Deploy to AWS
        uses: blombard/lambda-monorepo@master
        with:
          lambda-functions: '{ "divisio": "true" }'
          zip-params: "**/*.js **/*.json **/*.js.map node_modules/"
