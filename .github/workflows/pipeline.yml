on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

name: CI/CD

jobs:
  filter:
    name: filter
    runs-on: ubuntu-latest
    outputs:
      division: "${{ steps.filter.outputs.division }}"
      multiplication: "${{ steps.filter.outputs.multiplication }}"
      subtract: "${{ steps.filter.outputs.subtract }}"
      sum: "${{ steps.filter.outputs.sum }}"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Filter only modified Functions
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: ".github/filters.yml"

  division: 
    if: needs.filter.outputs.division == 'true'
    needs: [filter]
    name: division

  lint-division:
    name: division - code analysis
    needs: [division]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
        working-directory: functions/division
      - name: Lint
        run: npm run lint
        working-directory: functions/division

  test-division:
    name: division - tests
    needs: [division]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
        working-directory: functions/division
      - name: Lint
        run: npm run lint
        working-directory: functions/division

  deploy-division-staging:
    if: startsWith(github.ref, 'refs/tags/') == false && github.event_name != 'pull_request'
    name: staging
    needs: [lint-division, test-division]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: "sa-east-1"

      - name: Deploy to AWS
        uses: blombard/lambda-monorepo@master
        with:
          lambda-functions: '{ "division": "true" }'
          zip-params: "**/*.js **/*.json **/*.js.map node_modules/"

  deploy-division-production:
    if: startsWith(github.ref, 'refs/tags/') == true && github.event_name != 'pull_request'
    name: production
    needs: [lint-division, test-division]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: "sa-east-1"

      - name: Deploy to AWS
        uses: blombard/lambda-monorepo@master
        with:
          lambda-functions: '{ "division": "true" }'
          zip-params: "**/*.js **/*.json **/*.js.map node_modules/"

  lint-sum:
    if: needs.filter.outputs.sum == 'true'
    name: sum - code analysis
    needs: [filter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
        working-directory: functions/sum
      - name: Lint
        run: npm run lint
        working-directory: functions/sum

  test-sum:
    if: needs.filter.outputs.sum == 'true'
    name: sum - tests
    needs: [filter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
        working-directory: functions/sum
      - name: Lint
        run: npm run lint
        working-directory: functions/sum

  deploy-sum-staging:
    if: startsWith(github.ref, 'refs/tags/') == false && github.event_name != 'pull_request'
    name: staging
    needs: [lint-sum, test-sum]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: "sa-east-1"

      - name: Deploy to AWS
        uses: blombard/lambda-monorepo@master
        with:
          lambda-functions: '{ "sum": "true" }'
          zip-params: "**/*.js **/*.json **/*.js.map node_modules/"
  
  deploy-sum-production:
    if: startsWith(github.ref, 'refs/tags/') == true && github.event_name != 'pull_request'
    name: production
    needs: [lint-sum, test-sum]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: "sa-east-1"

      - name: Deploy to AWS
        uses: blombard/lambda-monorepo@master
        with:
          lambda-functions: '{ "sum": "true" }'
          zip-params: "**/*.js **/*.json **/*.js.map node_modules/"

  lint-multiplication:
    if: needs.filter.outputs.multiplication == 'true'
    name: multiplication - code analysis
    needs: [filter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
        working-directory: functions/multiplication
      - name: Lint
        run: npm run lint
        working-directory: functions/multiplication

  test-multiplication:
    if: needs.filter.outputs.multiplication == 'true'
    name: multiplication - tests
    needs: [filter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
        working-directory: functions/multiplication
      - name: Lint
        run: npm run lint
        working-directory: functions/multiplication

  deploy-multiplication-staging:
    if: startsWith(github.ref, 'refs/tags/') == false && github.event_name != 'pull_request'
    name: staging
    needs: [lint-multiplication, test-multiplication]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: "sa-east-1"

      - name: Deploy to AWS
        uses: blombard/lambda-monorepo@master
        with:
          lambda-functions: '{ "multiplication": "true" }'
          zip-params: "**/*.js **/*.json **/*.js.map node_modules/"
  
  deploy-multiplication-production:
    if: startsWith(github.ref, 'refs/tags/') == true && github.event_name != 'pull_request'
    name: production
    needs: [lint-multiplication, test-multiplication]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: "sa-east-1"

      - name: Deploy to AWS
        uses: blombard/lambda-monorepo@master
        with:
          lambda-functions: '{ "multiplication": "true" }'
          zip-params: "**/*.js **/*.json **/*.js.map node_modules/"

  lint-subtract:
    if: needs.filter.outputs.subtract == 'true'
    name: subtract - code analysis
    needs: [filter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
        working-directory: functions/subtract
      - name: Lint
        run: npm run lint
        working-directory: functions/subtract

  test-subtract:
    if: needs.filter.outputs.subtract == 'true'
    name: subtract - tests
    needs: [filter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
        working-directory: functions/subtract
      - name: Lint
        run: npm run lint
        working-directory: functions/subtract

  deploy-subtract-staging:
    if: startsWith(github.ref, 'refs/tags/') == false && github.event_name != 'pull_request'
    name: staging
    needs: [lint-subtract, test-subtract]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: "sa-east-1"

      - name: Deploy to AWS
        uses: blombard/lambda-monorepo@master
        with:
          lambda-functions: '{ "subtract": "true" }'
          zip-params: "**/*.js **/*.json **/*.js.map node_modules/"
  
  deploy-subtract-production:
    if: startsWith(github.ref, 'refs/tags/') == true && github.event_name != 'pull_request'
    name: production
    needs: [lint-subtract, test-subtract]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: "sa-east-1"

      - name: Deploy to AWS
        uses: blombard/lambda-monorepo@master
        with:
          lambda-functions: '{ "subtract": "true" }'
          zip-params: "**/*.js **/*.json **/*.js.map node_modules/"

